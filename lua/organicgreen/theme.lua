
local c = require('organicgreen.palette')

local hl = vim.api.nvim_set_hl
local theme = {}

theme.set_highlights = function()

  -- Editor
  hl(0, "Normal", { fg = c.fg, bg = c.bg })
  hl(0, "Cursor", { fg = c.cursor_fg, bg = c.cursor_bg })
  hl(0, "CursorLine", { fg = 'NONE', bg = c.cursor_bg })
  hl(0, "LineNr", { fg = c.light_gray, bg = 'NONE' })
  hl(0, "CursorLineNr", { fg = c.black, bg = 'NONE' })
  hl(0, "Whitespace", { fg = c.bg, bg = 'NONE' })
  hl(0, "EndOfBuffer", { fg = c.bg, bg = 'NONE' })
  hl(0, "NonText", { fg = c.bg, bg = 'NONE' })
  hl(0, "Visual", { fg = 'NONE', bg = c.highlight })
  hl(0, "Pmenu", { fg = c.black, bg = c.highlight_gray })
  hl(0, "PmenuSel", { fg = c.black, bg = c.highlight_blue })
  hl(0, "WildMenu", { fg = c.black, bg = c.highlight_blue })
  hl(0, "PmenuSbar", { fg = 'NONE', bg = c.dark_white })
  hl(0, "PmenuThumb", { fg = 'NONE', bg = c.gray })
  hl(0, "DiffText", { fg = c.sign_change, bg = 'NONE' })
  hl(0, "DiffAdd", { fg = c.fg_add, bg = 'NONE' })
  hl(0, "DiffChange", { fg = c.sign_change, bg = 'NONE' })
  hl(0, "DiffDelete", { fg = c.fg_delete, bg = 'NONE' })
  hl(0, "diffAdded", { fg = c.fg_add, bg = 'NONE' })
  hl(0, "diffRemoved", { fg = c.fg_delete, bg = 'NONE' })
  hl(0, "diffChanged", { fg = c.sign_change, bg = 'NONE' })
  hl(0, "diffOldFile", { fg = c.gray, bg = 'NONE' })
  hl(0, "diffNewFile", { fg = c.gray, bg = 'NONE' })
  hl(0, "diffFile", { fg = c.black, bg = 'NONE' })
  hl(0, "diffLine", { fg = c.purple, bg = 'NONE' })
  hl(0, "diffIndexLine", { fg = c.gray, bg = 'NONE' })
  hl(0, "MatchParen", { fg = 'NONE', bg = c.highlight })

  -- StatusLine
  hl(0, "StatusLine", { fg = c.dark_black, bg = c.dark_white })
  hl(0, "StatusLineNC", { fg = c.dark_black, bg = c.dark_white })
  hl(0, "StatusLineSeparator", { fg = c.dark_white, bg = 'NONE' })
  hl(0, "StatusLineTerm", { fg = c.dark_white, bg = 'NONE' })
  hl(0, "StatusLineTermNC", { fg = c.dark_white, bg = 'NONE' })

  -- Code
  hl(0, "Comment", { fg = c.gray, bg = 'NONE' })
  hl(0, "Variable", { fg = c.black, bg = 'NONE' })
  hl(0, "String", { fg = c.green, bg = 'NONE' })
  hl(0, "Character", { fg = c.sun, bg = 'NONE' })
  hl(0, "Number", { fg = c.black, bg = 'NONE' })
  hl(0, "Float", { fg = c.black, bg = 'NONE' })
  hl(0, "Boolean", { fg = c.black, bg = 'NONE' })
  hl(0, "Constant", { fg = c.black, bg = 'NONE' })
  hl(0, "Type", { fg = c.black, bg = 'NONE' })
  hl(0, "Function", { fg = c.blue, bg = 'NONE' })
  hl(0, "Keyword", { fg = c.purple, bg = 'NONE' })
  hl(0, "Conditional", { fg = c.purple, bg = 'NONE' })
  hl(0, "Repeat", { fg = c.purple, bg = 'NONE' })
  hl(0, "Operator", { fg = c.fg, bg = 'NONE' })
  hl(0, "PreProc", { fg = c.purple, bg = 'NONE' })
  hl(0, "Include", { fg = c.purple, bg = 'NONE' })
  hl(0, "Exception", { fg = c.purple, bg = 'NONE' })
  hl(0, "StorageClass", { fg = c.yellow, bg = 'NONE' })
  hl(0, "Structure", { fg = c.yellow, bg = 'NONE' })
  hl(0, "Typedef", { fg = c.purple, bg = 'NONE' })
  hl(0, "Define", { fg = c.purple, bg = 'NONE' })
  hl(0, "Macro", { fg = c.purple, bg = 'NONE' })
  hl(0, "Debug", { fg = c.red, bg = 'NONE' })
  hl(0, "Title", { fg = c.yellow, bg = 'NONE' })
  hl(0, "Label", { fg = c.black, bg = 'NONE' })
  hl(0, "SpecialChar", { fg = c.sun, bg = 'NONE' })
  hl(0, "Delimiter", { fg = c.fg, bg = 'NONE' })
  hl(0, "SpecialComment", { fg = c.fg, bg = 'NONE' })
  hl(0, "Tag", { fg = c.red, bg = 'NONE' })
  hl(0, "Bold", { fg = 'NONE', bg = 'NONE', bold=true, })
  hl(0, "Italic", { fg = 'NONE', bg = 'NONE', italic=true, })
  hl(0, "Underlined", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "Ignore", { fg = c.cyan, bg = 'NONE', bold=true, })
  hl(0, "Todo", { fg = c.blue, bg = 'NONE', bold=true, })
  hl(0, "Error", { fg = c.red, bg = 'NONE', bold=true, })
  hl(0, "Statement", { fg = c.purple, bg = 'NONE' })
  hl(0, "Identifier", { fg = c.fg, bg = 'NONE' })
  hl(0, "PreCondit", { fg = c.purple, bg = 'NONE' })
  hl(0, "Special", { fg = c.purple, bg = 'NONE' })

  -- Git
  hl(0, "SignColumn", { fg = 'NONE', bg = c.bg })
  hl(0, "SignAdd", { fg = c.sign_add, bg = 'NONE' })
  hl(0, "SignChange", { fg = c.sign_change, bg = 'NONE' })
  hl(0, "SignDelete", { fg = c.sign_delete, bg = 'NONE' })
  hl(0, "GitSignsAdd", { fg = c.sign_add, bg = 'NONE' })
  hl(0, "GitSignsChange", { fg = c.sign_change, bg = 'NONE' })
  hl(0, "GitSignsDelete", { fg = c.sign_delete, bg = 'NONE' })

  -- Neogit
  hl(0, "NeogitBranch", { fg = c.green, bg = 'NONE' })
  hl(0, "NeogitRemote", { fg = c.yellow, bg = 'NONE' })
  hl(0, "NeogitHunkHeader", { fg = c.purple, bg = 'NONE' })
  hl(0, "NeogitHunkHeaderHighlight", { fg = c.purple, bg = c.cursor_bg })
  hl(0, "NeogitDiffContextHighlight", { fg = c.fg, bg = c.cursor_bg })
  hl(0, "NeogitDiffDelete", { fg = c.fg_delete, bg = 'NONE' })
  hl(0, "NeogitDiffDeleteHighlight", { fg = c.fg_delete, bg = c.cursor_bg })
  hl(0, "NeogitDiffAdd", { fg = c.fg_add, bg = 'NONE' })
  hl(0, "NeogitDiffAddHighlight", { fg = c.fg_add, bg = c.cursor_bg })

  -- Hop
  hl(0, "HopNextKey", { fg = 'NONE', bg = c.marker_yellow })
  hl(0, "HopNextKey1", { fg = 'NONE', bg = c.marker_yellow })
  hl(0, "HopNextKey2", { fg = 'NONE', bg = c.marker_green })
  hl(0, "HopUnmatched", { fg = c.dark_gray, bg = 'NONE' })

  -- Vim-illuminate
  hl(0, "IlluminatedWordText", { fg = 'NONE', bg = c.highlight_green })
  hl(0, "IlluminatedWordRead", { fg = 'NONE', bg = c.highlight_green })
  hl(0, "IlluminatedWordWrite", { fg = 'NONE', bg = c.highlight_blue })

  -- TreeSitter
  hl(0, "TSField", { fg = c.fg, bg = 'NONE' })
  hl(0, "TSKeyword", { fg = c.purple, bg = 'NONE' })
  hl(0, "TSKeywordFunction", { fg = c.purple, bg = 'NONE' })
  hl(0, "TSFunction", { fg = c.blue, bg = 'NONE' })
  hl(0, "TSProperty", { fg = c.blue, bg = 'NONE' })
  hl(0, "TSTextReference", { fg = c.red, bg = 'NONE' })

  -- LSP
  hl(0, "TroubleText", { fg = c.red, bg = 'NONE' })
  hl(0, "TroubleCount", { fg = c.red, bg = 'NONE' })
  hl(0, "TroubleNormal", { fg = c.red, bg = 'NONE' })
  hl(0, "DiagnosticError", { fg = c.red, bg = c.highlight_gray })
  hl(0, "DiagnosticWarn", { fg = c.orange, bg = c.highlight_gray })
  hl(0, "DiagnosticWarning", { fg = c.orange, bg = c.highlight_gray })
  hl(0, "DiagnosticInfo", { fg = c.blue, bg = c.highlight_gray })
  hl(0, "DiagnosticInformation", { fg = c.blue, bg = c.highlight_gray })
  hl(0, "DiagnosticHint", { fg = c.gray, bg = c.highlight_gray })
  hl(0, "DiagnosticSignError", { fg = c.red, bg = 'NONE' })
  hl(0, "DiagnosticSignWarn", { fg = c.orange, bg = 'NONE' })
  hl(0, "DiagnosticSignWarning", { fg = c.orange, bg = 'NONE' })
  hl(0, "DiagnosticSignInformation", { fg = c.yellow, bg = 'NONE' })
  hl(0, "DiagnosticSignInfo", { fg = c.yellow, bg = 'NONE' })
  hl(0, "DiagnosticSignHint", { fg = c.gray, bg = 'NONE' })
  hl(0, "DiagnosticFloatingError", { fg = c.red, bg = 'NONE' })
  hl(0, "DiagnosticFloatingWarn", { fg = c.orange, bg = 'NONE' })
  hl(0, "DiagnosticFloatingInfo", { fg = c.yellow, bg = 'NONE' })
  hl(0, "DiagnosticFloatingHint", { fg = c.gray, bg = 'NONE' })
  hl(0, "DiagnosticUnderlineError", { fg = 'NONE', bg = 'NONE', sp = c.red, underline=true, })
  hl(0, "DiagnosticUnderlineWarn", { fg = 'NONE', bg = 'NONE', sp = c.orange, underline=true, })
  hl(0, "DiagnosticUnderlineInfo", { fg = 'NONE', bg = 'NONE', sp = c.yellow, underline=true, })
  hl(0, "DiagnosticUnderlineHint", { fg = 'NONE', bg = 'NONE', sp = c.light_gray, underline=true, })
  hl(0, "LspDiagnosticsDefault", { fg = c.purple, bg = 'NONE' })
  hl(0, "LspDiagnosticsDefaultError", { fg = c.red, bg = 'NONE' })
  hl(0, "LspDiagnosticsDefaultWarning", { fg = c.orange, bg = 'NONE' })
  hl(0, "LspDiagnosticsDefaultInformation", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsDefaultInfo", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsDefaultHint", { fg = c.gray, bg = 'NONE' })
  hl(0, "LspDiagnosticsVirtualTextError", { fg = c.red, bg = 'NONE' })
  hl(0, "LspDiagnosticsVirtualTextWarning", { fg = c.orange, bg = 'NONE' })
  hl(0, "LspDiagnosticsVirtualTextInformation", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsVirtualTextInfo", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsVirtualTextHint", { fg = c.gray, bg = 'NONE' })
  hl(0, "LspDiagnosticsFloatingError", { fg = c.red, bg = 'NONE' })
  hl(0, "LspDiagnosticsFloatingWarning", { fg = c.orange, bg = 'NONE' })
  hl(0, "LspDiagnosticsFloatingInformation", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsFloatingInfo", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsFloatingHint", { fg = c.gray, bg = 'NONE' })
  hl(0, "LspDiagnosticsSignError", { fg = c.red, bg = 'NONE' })
  hl(0, "LspDiagnosticsSignWarning", { fg = c.orange, bg = 'NONE' })
  hl(0, "LspDiagnosticsSignInformation", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsSignInfo", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsSignHint", { fg = c.blue, bg = 'NONE' })
  hl(0, "LspDiagnosticsError", { fg = c.red, bg = 'NONE' })
  hl(0, "LspDiagnosticsWarning", { fg = c.orange, bg = 'NONE' })
  hl(0, "LspDiagnosticsInformation", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsInfo", { fg = c.yellow, bg = 'NONE' })
  hl(0, "LspDiagnosticsHint", { fg = c.gray, bg = 'NONE' })
  hl(0, "LspDiagnosticsUnderlineError", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "LspDiagnosticsUnderlineWarning", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "LspDiagnosticsUnderlineInformation", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "LspDiagnosticsUnderlineInfo", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "LspDiagnosticsUnderlineHint", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "LspReferenceRead", { fg = 'NONE', bg = c.black })
  hl(0, "LspReferenceText", { fg = 'NONE', bg = c.black })
  hl(0, "LspReferenceWrite", { fg = 'NONE', bg = c.black })
  hl(0, "LspCodeLens", { fg = c.gray, bg = 'NONE', italic=true, })
  hl(0, "LspCodeLensSeparator", { fg = c.gray, bg = 'NONE', italic=true, })
end

return theme